FORMAT: 1A
HOST: https://api.ingresse.com/

# Ingresse Public API
This is the documentation for the Ingresse Public API.
# Group Event


FORMAT: 1A
HOST: https://api.ingresse.com/

# Ingresse Public API
This is the documentation for the Ingresse Public API.
# Group Ticket

## Transfers of a ticket [/ticket/{ticketId}/transfer]

+ Parameters
    + ticketId: 999 (number) - Ticket id

### Transfer a ticket [POST]

Transfer ticket to another user. It will create a request for the transfer. It
should be accepted or refused after.

+ Attributes
    + user: Name/Email(string, required)

+ Request (application/x-www-form-urlencoded)

+ Response 200 (application/json)

                {
                    "responseData": {
                        "saleTicketId": 999,
                        "user": 9999999,
                        "status": "pending",
                        "id": 123456
                    },
                    "responseDetails": "OK",
                    "responseError": null,
                    "responseStatus": 200
                }

+ Response 200 (application/json)

                {
                    "responseData": "[Ingresse Exception Error] CONTEXT EXCEPTION - ERROR 6040 - Ticket is already under a transfer",
                    "responseDetails": "OK",
                    "responseError": {
                        "status": false,
                        "category": "CONTEXT EXCEPTION",
                        "code": 6040,
                        "message": "Ticket is already under a transfer",
                        "fields": null
                    },
                    "responseStatus": 200
                }

+ Response 200 (application/json)

                {
                    "responseData": "[Ingresse Exception Error] CONTEXT EXCEPTION - ERROR 6042 - Invalid user, user must be a ID or a valid e-mail",
                    "responseDetails": "OK",
                    "responseError": {
                        "status": false,
                        "category": "CONTEXT EXCEPTION",
                        "code": 6042,
                        "message": "Invalid user, user must be a ID or a valid e-mail",
                        "fields": null
                    },
                    "responseStatus": 200
                }

+ Response 200 (application/json)

                {
                    "responseData": "[Ingresse Exception Error] CONTEXT EXCEPTION - ERROR 6038 - User is not the current ticket holder",
                    "responseDetails": "OK",
                    "responseError": {
                        "status": false,
                        "category": "CONTEXT EXCEPTION",
                        "code": 6038,
                        "message": "User is not the current ticket holder",
                        "fields": null
                    },
                    "responseStatus": 200
                }

+ Response 200 (application/json)

                {
                    "responseData": "[Ingresse Exception Error] CONTEXT EXCEPTION - ERROR 6043 - Ticket does not exists",
                    "responseDetails": "OK",
                    "responseError": {
                        "status": false,
                        "category": "CONTEXT EXCEPTION",
                        "code": 6043,
                        "message": "Ticket does not exists",
                        "fields": null
                    },
                    "responseStatus": 200
                }

+ Response 200 (application/json)

                {
                    "responseData": "[Ingresse Exception Error] CONTEXT EXCEPTION - ERROR 6039 - Ticket not available",
                    "responseDetails": "OK",
                    "responseError": {
                        "status": false,
                        "category": "CONTEXT EXCEPTION",
                        "code": 6039,
                        "message": "Ticket not available",
                        "fields": null
                    },
                    "responseStatus": 200
                }

+ Response 200 (application/json)

                {
                    "responseData": "[Ingresse Exception Error] CONTEXT EXCEPTION - ERROR 6041 - Transfering tickets is not available from this event",
                    "responseDetails": "OK",
                    "responseError": {
                        "status": false,
                        "category": "CONTEXT EXCEPTION",
                        "code": 6041,
                        "message": "Transfering tickets is not available from this event",
                        "fields": null
                    },
                    "responseStatus": 200
                }

## A transfer for a ticket between users [/ticket/{ticketId}/transfer/{id}]

+ Parameters
    + ticketId: 999 (number) - Ticket id
    + id: 999 (number) - Transfer id

### Update a transfer [POST]

Accept a transfer of a ticket.
Only the customer that received the transfer request can accept it.

+ Attributes
    + action: accept (string, required) - accept, refuse, return, cancel
        Action wanted for the transfer request.
        Accept: user accepts the transfer and became the new holder of the ticket
        Refuse: user rejects the transfer the ticket goes back to the current holder
        Return: the ticket goes back to the first older holder
        Cancel: current holder cancels a pending transfer request.

+ Request (application/x-www-form-urlencoded)

+ Response 200 (application/json)

                {
                    "responseData": {
                        "saleTicketId": 999,
                        "user": 9999999,
                        "status": "accepted",
                        "id": "xyz-123"
                    },
                    "responseDetails": "OK",
                    "responseError": null,
                    "responseStatus": 200
                }

+ Response 200 (application/json)

                {
                    "responseData": "[Ingresse Exception Error] CONTEXT EXCEPTION - ERROR 6034 - You can't accept a ticket transfer that is not pending.",
                    "responseDetails": "OK",
                    "responseError": {
                        "status": false,
                        "category": "CONTEXT EXCEPTION",
                        "code": 6034,
                        "message": "You can't accept a ticket transfer that is not pending.",
                        "fields": null
                    },
                    "responseStatus": 200
                }

+ Response 200 (application/json)

                {
                    "responseData": "[Ingresse Exception Error] CONTEXT EXCEPTION - ERROR 6035 - You can't refuse a ticket transfer that is not pending.",
                    "responseDetails": "OK",
                    "responseError": {
                        "status": false,
                        "category": "CONTEXT EXCEPTION",
                        "code": 6035,
                        "message": "You can't refuse a ticket transfer that is not pending.",
                        "fields": null
                    },
                    "responseStatus": 200
                }

+ Response 200 (application/json)

                {
                    "responseData": "[Ingresse Exception Error] CONTEXT EXCEPTION - ERROR 6036 - You can't cancel a ticket transfer that is not pending.",
                    "responseDetails": "OK",
                    "responseError": {
                        "status": false,
                        "category": "CONTEXT EXCEPTION",
                        "code": 6036,
                        "message": "You can't cancel a ticket transfer that is not pending.",
                        "fields": null
                    },
                    "responseStatus": 200
                }

+ Response 200 (application/json)

                {
                    "responseData": "[Ingresse Exception Error] CONTEXT EXCEPTION - ERROR 6037 - You can't return a ticket transfer that is not accepted.",
                    "responseDetails": "OK",
                    "responseError": {
                        "status": false,
                        "category": "CONTEXT EXCEPTION",
                        "code": 6037,
                        "message": "You can't return a ticket transfer that is not accepted.",
                        "fields": null
                    },
                    "responseStatus": 200
                }

+ Response 200 (application/json)

                {
                    "responseData": "[Ingresse Exception Error] DATABASE EXCEPTION - ERROR 3059 - Transfer could not be updated. Transfer not found.",
                    "responseDetails": "OK",
                    "responseError": {
                        "status": false,
                        "category": "DATABASE EXCEPTION",
                        "code": 3059,
                        "message": "Transfer could not be updated. Transfer not found.",
                        "fields": null
                    },
                    "responseStatus": 200
                }
